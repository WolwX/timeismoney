PROJECT REFERENCE FILE
================================================================================
DERNIÈRE MISE À JOUR : [Date du jour : 01/10/2025]
BUT DU PROJET : Application Flutter de chronométrage financier ("Time Is Money") affichant les gains en temps réel basés sur un taux horaire paramétrable.
CONTEXTE TECHNIQUE : 
    - Framework : Flutter
    - Gestion d'état : Provider
    - Persistance locale : shared_preferences (Utilisé pour sauvegarder le taux, la devise, le titre du taux et le taux Net/Brut).

--------------------------------------------------------------------------------
1. ÉTAT ACTUEL DE L'APPLICATION (V. 1.1.0)
--------------------------------------------------------------------------------

FONCTIONNALITÉS COMPLÈTES :
1.  **Chronomètre et Calcul en Temps Réel :** Un Timer incrémente le temps et les gains ($ Brut).
2.  **Personnalisation du Taux :** L'utilisateur peut définir un taux horaire et une devise.
3.  **Préréglages de Taux :** Une liste de taux (presets) est disponible dans l'écran des réglages (via `lib/models/preset_rates.dart`).
4.  **Calcul Brut/Net Paramétrable :**
    * Un pourcentage de conversion NET/BRUT est stocké et réglable par l'utilisateur (par défaut 77% pour la France).
    * Le Net est calculé en multipliant le Brut par (TauxNet / 100).
5.  **Affichage des Gains :**
    * Le **gain NET** est le compteur principal (grosse police, Jaune/Or).
    * Le gain **BRUT** est affiché comme référence secondaire (Vert, police de taille 22).
6.  **Estimations Annuelles :** Les estimations Mensuelles et Annuelles (Brut et Net) sont affichées en bas de l'écran.

FICHIERS CLES ET RÔLES :
* `lib/providers/timer_controller.dart`: Gère la logique du chronomètre, l'état (isRunning, elapsedDuration), le taux, la devise, le titre du taux, et le taux NET/BRUT. Assure la persistance via `shared_preferences`.
* `lib/screens/home_screen.dart`: Affiche le chronomètre, les gains (Net principal, Brut secondaire), les taux et les estimations annuelles.
* `lib/screens/settings_screen.dart`: Permet de modifier le taux horaire, la devise, de choisir un préréglage, et de régler le pourcentage de conversion NET/BRUT.
* `lib/models/preset_rates.dart`: Contient la structure et la liste statique des préréglages de taux.

CHOIX D'IMPLEMENTATION NOTABLES :
* Le calcul des gains en temps réel est basé sur le taux Brut, puis le Net est dérivé via le facteur de conversion.
* Le reset du timer remet le temps et les gains à zéro.

--------------------------------------------------------------------------------
2. PROCHAINE ÉTAPE (PRIORITÉ ÉLEVÉE)
--------------------------------------------------------------------------------

**OBJECTIF :** Implémenter la journalisation et l'historique des sessions.

**DÉTAILS ATTENDUS :**
* **Modèle de Session :** Créer un modèle `Session` (Date, Durée, Taux Horaire, Gain Brut Final, Gain Net Final).
* **Sauvegarde :** Enregistrer les sessions terminées de manière persistante (probablement avec `shared_preferences` en stockant une liste sérialisée en JSON).
* **Interface :** Créer un nouvel écran (`HistoryScreen`) pour lister toutes les sessions passées.
* **Déclenchement :** L'enregistrement d'une session doit se faire au moment du RESET ou d'une nouvelle session si le temps écoulé > 0.

================================================================================